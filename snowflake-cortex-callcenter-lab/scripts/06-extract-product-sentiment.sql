USE DATABASE LLM_CORTEX_DEMO_DB;
USE SCHEMA STAGE;
USE WAREHOUSE USER_STD_XSMALL_WH;

CREATE OR REPLACE TABLE LLM_CORTEX_DEMO_DB.STAGE.TRANSCRIPT_ENTITY_SENTIMENT (
    FILE_NAME STRING,
    PRODUCT_ENTITY_SENTIMENT VARIANT,
    TRANSCRIPT VARIANT
);

INSERT INTO LLM_CORTEX_DEMO_DB.STAGE.TRANSCRIPT_ENTITY_SENTIMENT
SELECT
    FILE_NAME,
    ENTITY_SENTIMENT(
        PARSED_CONTENT:text,
        ARRAY_CONSTRUCT('Cost', 'Quality', 'Delivery Time')
    ) AS PRODUCT_ENTITY_SENTIMENT,
    PARSED_CONTENT AS TRANSCRIPT
FROM LLM_CORTEX_DEMO_DB.STAGE.PARSED_TRANSCRIPTS;

SELECT
    FILE_NAME,
    flattened.value:entity::STRING AS ENTITY,
    flattened.value:sentiment::STRING AS SENTIMENT,
    flattened.value:confidence::FLOAT AS CONFIDENCE
FROM LLM_CORTEX_DEMO_DB.STAGE.TRANSCRIPT_ENTITY_SENTIMENT,
     LATERAL FLATTEN(INPUT => PRODUCT_ENTITY_SENTIMENT) AS flattened;

CREATE OR REPLACE TABLE LLM_CORTEX_DEMO_DB.STAGE.TRANSCRIPT_ENTITY_COLUMNS AS
SELECT
    FILE_NAME,
    TRANSCRIPT,
    MAX(CASE WHEN flattened.value:entity::STRING = 'Cost' THEN flattened.value:sentiment::STRING END) AS COST,
    MAX(CASE WHEN flattened.value:entity::STRING = 'Quality' THEN flattened.value:sentiment::STRING END) AS QUALITY,
    MAX(CASE WHEN flattened.value:entity::STRING = 'Delivery Time' THEN flattened.value:sentiment::STRING END) AS DELIVERY_TIME
FROM LLM_CORTEX_DEMO_DB.STAGE.TRANSCRIPT_ENTITY_SENTIMENT,
     LATERAL FLATTEN(INPUT => PRODUCT_ENTITY_SENTIMENT) AS flattened
GROUP BY FILE_NAME, TRANSCRIPT;

SELECT *
FROM LLM_CORTEX_DEMO_DB.STAGE.TRANSCRIPT_ENTITY_COLUMNS;